{"ast":null,"code":"var _jsxFileName = \"C:\\\\HTML\\\\Test\\\\React\\\\snack_ladder\\\\src\\\\components\\\\Timmer.js\";\nimport React, { useEffect, useState } from 'react';\n\nfunction Timmer() {\n  const [seconds, setSeconds] = useState(10); // useEffect(() => {\n  //   setSeconds(setInterval(seconds, 1000));\n  // }, []);\n\n  useEffect(() => {\n    if (seconds > 0) {\n      setTimeout(() => setSeconds(seconds - 1), 1000);\n    } else {\n      setSeconds('BOOOOM!');\n    }\n  }); // function tick() {\n  //   if (seconds > 0) {\n  //     setSeconds(seconds - 1)\n  //   } else {\n  //     clearInterval(seconds);\n  //   }\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, seconds);\n}\n\nexport default Timmer;","map":{"version":3,"sources":["C:/HTML/Test/React/snack_ladder/src/components/Timmer.js"],"names":["React","useEffect","useState","Timmer","seconds","setSeconds","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,MAAT,GAAkB;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC,CADc,CAEd;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,OAAO,GAAG,CAAd,EAAiB;AACbE,MAAAA,UAAU,CAAC,MAAMD,UAAU,CAACD,OAAO,GAAG,CAAX,CAAjB,EAAgC,IAAhC,CAAV;AACD,KAFH,MAES;AACLC,MAAAA,UAAU,CAAC,SAAD,CAAV;AACD;AACN,GANQ,CAAT,CANc,CAcd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,OADL,CAFJ;AAMD;;AAED,eAAeD,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Timmer() {\r\n    const [seconds, setSeconds] = useState(10);\r\n    // useEffect(() => {\r\n    //   setSeconds(setInterval(seconds, 1000));\r\n    // }, []);\r\n  \r\n    useEffect(() => {\r\n        if (seconds > 0) {\r\n            setTimeout(() => setSeconds(seconds - 1), 1000);\r\n          } else {\r\n            setSeconds('BOOOOM!');\r\n          }\r\n    });\r\n  \r\n    // function tick() {\r\n    //   if (seconds > 0) {\r\n    //     setSeconds(seconds - 1)\r\n    //   } else {\r\n    //     clearInterval(seconds);\r\n    //   }\r\n    // }\r\n  \r\n    return (\r\n  \r\n        <div>\r\n            {seconds}\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Timmer;"]},"metadata":{},"sourceType":"module"}